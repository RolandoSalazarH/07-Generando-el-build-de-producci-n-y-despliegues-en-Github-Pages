{"version":3,"sources":["Components/AddCategory.js","helpers/getFetchGifs.js","hooks/useFetchGifs.js","Components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","input","setInput","onSubmit","e","preventDefault","categoria","onChange","target","value","console","log","a","fetch","encodeURI","resp","json","data","gifs","map","id","title","url","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","getFechGifs","then","imgs","setTimeout","GifGrid","className","src","alt","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAGO,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAC5B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,sBAAMC,SAVR,SAAsBC,GACpBA,EAAEC,iBACFN,GAAc,SAACO,GAAD,OAAgBL,GAAhB,mBAAyBK,QAQvC,SACE,uBAAOC,SANX,SAAsBH,GACpBF,EAASE,EAAEI,OAAOC,OAClBC,QAAQC,IAAIV,IAIqBQ,MAAOR,M,uEChBpC,WAA2BK,GAA3B,qBAAAM,EAAA,sEACeC,MAAM,0CAAD,OACoBC,UAAUR,GAD9B,uDADpB,cACES,EADF,gBAImBA,EAAKC,OAJxB,uBAIIC,EAJJ,EAIIA,KAEFC,EAAOD,EAAKE,KAAI,SAACF,GAAU,IAAD,EAC9B,MAAO,CACLG,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZC,IAAG,UAAEL,EAAKM,cAAP,aAAE,EAAaC,iBAAiBF,QAVnC,kBAaDJ,GAbC,4C,sBCED,SAASO,EAAanB,GAC3B,MAA0BN,mBAAS,CAAEiB,KAAM,GAAIS,SAAS,IAAxD,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OARAC,qBAAU,YDLJ,SAAP,mCCMGC,CAAYxB,GAAWyB,MAAK,SAACC,GAC3BC,YAAW,WACTL,EAAS,CAAEX,KAAMe,EAAMN,SAAS,MAC/B,UAEJ,CAACpB,IAEGqB,ECXF,SAASO,EAAT,GAAiC,IAAd5B,EAAa,EAAbA,UAExB,EAAsBmB,EAAanB,GAA5BW,EAAP,EAAOA,KAAKS,EAAZ,EAAYA,QAEZ,OACE,qCACE,6BAAKpB,IACJoB,GAAW,0CACXT,EAAKE,KAAI,YAAyB,IAAtBE,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,IAAKF,EAAS,EAATA,GACvB,OACE,sBAAce,UAAU,OAAxB,UACI,qBAAKC,IAAKd,EAAKe,IAAKhB,IACpB,4BAAIA,MAFED,SCTb,SAASkB,IACd,MAAoCtC,mBAAS,CAAC,KAA9C,mBAAOuC,EAAP,KAAmBxC,EAAnB,KAEA,OACE,gCACE,oBAAIoC,UAAU,aAAd,0BACA,cAACrC,EAAD,CAAaC,cAAeA,IAC5B,uBACA,6BACGwC,EAAWpB,KAAI,SAACb,GAAD,OACd,cAAC4B,EAAD,CAAyB5B,UAAWA,GAAtBA,W,MCTxBkC,IAASC,OACP,cAACH,EAAD,IACAI,SAASC,eAAe,W","file":"static/js/main.3fa1f93b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function AddCategory({ setCategorias }) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setCategorias((categoria) => [input,...categoria ]);\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setInput(e.target.value);\r\n    console.log(input);\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input onChange={handleChange} value={input} />\r\n    </form>\r\n  );\r\n}\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n"," \r\n export async function getFechGifs(categoria) {\r\n    const resp = await fetch(\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=X1VDYSPNMN6lbt8HlM8XIMJJj9F73AZt`\r\n    );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((data) => {\r\n      return {\r\n        id: data.id,\r\n        title: data.title,\r\n        url: data.images?.downsized_medium.url,\r\n      };\r\n    });\r\nreturn gifs;\r\n  }\r\n","import { useEffect, useState } from \"react\";\r\nimport { getFechGifs } from \"../helpers/getFetchGifs\";\r\n\r\nexport function useFetchGifs(categoria) {\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n \r\n  useEffect(() => {\r\n    getFechGifs(categoria).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({ data: imgs, loading: false });\r\n      }, 3000);\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport function GifGrid({ categoria }) {\r\n\r\n  const {data,loading}= useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3>{categoria}</h3>\r\n      {loading && <p>Loading..</p>}\r\n      {data.map(({ title, url, id }) => {\r\n        return (\r\n          <div key={id} className=\"card\">\r\n              <img src={url} alt={title} />\r\n              <p>{title}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./Components/AddCategory\";\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\nexport function GifExpertApp() {\r\n  const [categorias, setCategorias] = useState([\"\"]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"Main-title\">GifExpertApp</h1>\r\n      <AddCategory setCategorias={setCategorias} />\r\n      <hr />\r\n      <ol>\r\n        {categorias.map((categoria) => (\r\n          <GifGrid key={categoria} categoria={categoria} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {GifExpertApp} from \"./GifExpertApp\"\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}